{"ast":null,"code":"//FULL CRUD\n\n/* ----- TYPES ------ */\nconst GETALLPROFILES = 'profiles/getAllProfiles';\nconst CREATEPROFILE = 'profiles/createProfile';\nconst EDITPROFILE = 'profiles/editProfile';\nconst DELETEPROFILE = 'profiles/deleteProfile';\n\n/* ----- ACTIONS ------ */\nexport const getAllProfilesAction = profiles => {\n  return {\n    type: GETALLPROFILES,\n    profiles\n  };\n};\nexport const createProfileAction = profile => {\n  return {\n    type: CREATEPROFLE,\n    profile\n  };\n};\nexport const editProfileAction = profile => {\n  return {\n    type: EDITPROFILE,\n    profile\n  };\n};\nexport const deleteProfileAction = profileId => {\n  return {\n    type: DELETEPROFILE,\n    profileId\n  };\n};\n\n/* ------ THUNKS ------ */\n\nexport const getAllProfilesThunk = () => async dispatch => {\n  const response = await fetch(`/api/profiles/all`);\n  if (response.ok) {\n    const profiles = await response.json();\n    dispatch(getAllProfilesAction(profiles));\n    return profiles;\n  }\n};\nexport const createProfileThunk = profile => async dispatch => {\n  const response = await fetch(`/api/profiles/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(profile)\n  });\n  if (response.ok) {\n    const newprofile = await response.json();\n    dispatch(getAllProfilesAction(newprofile));\n    return newprofile;\n  }\n};\nexport const editProfileThunk = profile => async dispatch => {\n  const response = await fetch(`/api/profiles/all`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(profile)\n  });\n  if (response.ok) {\n    const newprofile = await response.json();\n    dispatch(getAllProfilesAction(newprofile));\n    return newprofile;\n  }\n};\nexport const deleteProfileThunk = profileId => async dispatch => {\n  const res = await fetch(`/api/profiles/${profileId}/delete`, {\n    method: 'DELETE'\n  });\n  if (res.ok) {\n    dispatch(deleteProfileAction(profileId));\n  }\n};\n\n/* ------ REDUCER ------ */\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let newState = {};\n  switch (action.type) {\n    case GETALLPROFILES:\n      // newState = { ...state }\n      console.log('************', action.profiles);\n      action.profiles.forEach(prof => {\n        newState[prof.id] = prof;\n      });\n      return newState;\n    case CREATEPROFLE:\n      newState = {\n        ...state\n      };\n      newState[action.profile.id] = action.profile;\n      return newState;\n    case EDITPROFILE:\n      newState = {\n        ...state\n      };\n      newState[action.profile.id] = {\n        ...newState[action.profile.id],\n        ...action.profile\n      };\n      return newState;\n    case DELETEPROFILE:\n      newState = {\n        ...state\n      };\n      delete newState[action.profileId];\n      return newState;\n    default:\n      return state;\n  }\n};\nexport default profileReducer;","map":{"version":3,"names":["GETALLPROFILES","CREATEPROFILE","EDITPROFILE","DELETEPROFILE","getAllProfilesAction","profiles","type","createProfileAction","profile","CREATEPROFLE","editProfileAction","deleteProfileAction","profileId","getAllProfilesThunk","dispatch","response","fetch","ok","json","createProfileThunk","method","headers","body","JSON","stringify","newprofile","editProfileThunk","deleteProfileThunk","res","profileReducer","state","action","newState","console","log","forEach","prof","id"],"sources":["/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/profiles.js"],"sourcesContent":["//FULL CRUD\n\n/* ----- TYPES ------ */\nconst GETALLPROFILES = 'profiles/getAllProfiles'\nconst CREATEPROFILE = 'profiles/createProfile'\nconst EDITPROFILE = 'profiles/editProfile'\nconst DELETEPROFILE = 'profiles/deleteProfile'\n\n/* ----- ACTIONS ------ */\nexport const getAllProfilesAction = (profiles) => {\n    return {\n        type: GETALLPROFILES,\n        profiles\n    }\n}\n\nexport const createProfileAction = (profile) => {\n    return {\n        type: CREATEPROFLE,\n        profile\n    }\n}\n\nexport const editProfileAction = (profile) => {\n    return {\n        type: EDITPROFILE,\n        profile\n    }\n}\n\nexport const deleteProfileAction = (profileId) => {\n    return {\n        type: DELETEPROFILE,\n        profileId\n    }\n}\n\n/* ------ THUNKS ------ */\n\nexport const getAllProfilesThunk = () => async dispatch => {\n    const response = await fetch(`/api/profiles/all`)\n\n    if (response.ok) {\n        const profiles = await response.json()\n        dispatch(getAllProfilesAction(profiles))\n        return profiles\n    }\n}\n\nexport const createProfileThunk = (profile) => async dispatch => {\n    const response = await fetch(`/api/profiles/create`, {\n        method: 'POST',\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify(profile)\n    })\n\n    if (response.ok) {\n        const newprofile = await response.json()\n        dispatch(getAllProfilesAction(newprofile))\n        return newprofile\n    }\n}\n\nexport const editProfileThunk = (profile) => async dispatch => {\n    const response = await fetch(`/api/profiles/all`, {\n        method: 'PUT',\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify(profile)\n    })\n\n    if (response.ok) {\n        const newprofile = await response.json()\n        dispatch(getAllProfilesAction(newprofile))\n        return newprofile\n    }\n}\n\nexport const deleteProfileThunk = (profileId) => async (dispatch) => {\n    const res = await fetch(`/api/profiles/${profileId}/delete`, { method: 'DELETE' });\n    if (res.ok) {\n      dispatch(deleteProfileAction(profileId))\n    }\n  }\n\n/* ------ REDUCER ------ */\nconst profileReducer = (state = {}, action) => {\n    let newState = {};\n    switch (action.type) {\n        case GETALLPROFILES:\n            // newState = { ...state }\n            console.log('************', action.profiles)\n            action.profiles.forEach(prof => {\n                newState[prof.id] = prof\n            });\n            return newState;\n        case CREATEPROFLE:\n            newState = { ...state }\n            newState[action.profile.id] = action.profile\n            return newState;\n        case EDITPROFILE:\n            newState={...state}\n            newState[action.profile.id] = { ...newState[action.profile.id], ...action.profile };\n            return newState;\n        case DELETEPROFILE:\n            newState = { ...state }\n            delete newState[action.profileId];\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default profileReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}