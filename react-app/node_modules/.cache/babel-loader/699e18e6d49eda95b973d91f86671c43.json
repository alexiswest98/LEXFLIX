{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session';\nimport movieReducer from './movies';\nimport profileReducer from './profiles';\nimport reviewsReducer from './reviews';\nconst rootReducer = combineReducers({\n  session,\n  movies: movieReducer,\n  profiles: profileReducer,\n  reviews: reviewsReducer\n});\nlet enhancer;\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\nconst configureStore = preloadedState => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\nexport default configureStore;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","compose","thunk","session","movieReducer","profileReducer","reviewsReducer","rootReducer","movies","profiles","reviews","enhancer","process","env","NODE_ENV","logger","require","default","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","preloadedState"],"sources":["/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/index.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session'\nimport movieReducer from './movies';\nimport profileReducer from './profiles';\nimport reviewsReducer from './reviews';\n\nconst rootReducer = combineReducers({\n  session,\n  movies: movieReducer,\n  profiles: profileReducer,\n  reviews: reviewsReducer\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,EAAEC,OAAO,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,UAAU;AACnC,OAAOC,cAAc,MAAM,YAAY;AACvC,OAAOC,cAAc,MAAM,WAAW;AAEtC,MAAMC,WAAW,GAAGR,eAAe,CAAC;EAClCI,OAAO;EACPK,MAAM,EAAEJ,YAAY;EACpBK,QAAQ,EAAEJ,cAAc;EACxBK,OAAO,EAAEJ;AACX,CAAC,CAAC;AAGF,IAAIK,QAAQ;AAEZ,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,GAAGX,eAAe,CAACE,KAAK,CAAC;AACnC,CAAC,MAAM;EACL,MAAMa,MAAM,GAAGC,OAAO,CAAC,cAAc,CAAC,CAACC,OAAO;EAC9C,MAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAoC,IAAInB,OAAO;EACxDU,QAAQ,GAAGO,gBAAgB,CAAClB,eAAe,CAACE,KAAK,EAAEa,MAAM,CAAC,CAAC;AAC7D;AAEA,MAAMM,cAAc,GAAIC,cAAc,IAAK;EACzC,OAAOxB,WAAW,CAACS,WAAW,EAAEe,cAAc,EAAEX,QAAQ,CAAC;AAC3D,CAAC;AAED,eAAeU,cAAc"},"metadata":{},"sourceType":"module"}