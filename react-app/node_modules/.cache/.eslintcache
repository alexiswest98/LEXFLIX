[{"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/index.js":"1","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/App.js":"2","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/index.js":"3","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/session.js":"4","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/User.js":"5","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/UsersList.js":"6","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/NavBar.js":"7","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/auth/LoginForm.js":"8","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/auth/ProtectedRoute.js":"9","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/auth/SignUpForm.js":"10","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/auth/LogoutButton.js":"11","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/movies.js":"12","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/context/Modal.js":"13","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/profiles.js":"14","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/reviews.js":"15","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/Profiles/index.js":"16","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/ManageProfiles/index.js":"17","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/EditProfile/index.js":"18","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/addProfile/index.js":"19","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/HomePage/HomePage.js":"20","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/HomePageCarousels/HomePageCarousels.js":"21","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/MainSplashPage/SplashPage.js":"22","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/TrailerPage/TrailerPage.js":"23","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/ComingSoon/index.js":"24","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/MovieReview/MovieReview.js":"25","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/MovieDetailModal/MovieModal.js":"26","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/genresmovies.js":"27","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/MovieHomePage/MovieHomePage.js":"28","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/myList/MyList.js":"29","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/mylist.js":"30","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/repeatfuncs.js":"31"},{"size":621,"mtime":1673925534626,"results":"32","hashOfConfig":"33"},{"size":3257,"mtime":1676421332012,"results":"34","hashOfConfig":"33"},{"size":995,"mtime":1676259520288,"results":"35","hashOfConfig":"33"},{"size":2243,"mtime":1673003654578,"results":"36","hashOfConfig":"33"},{"size":721,"mtime":1672713077671,"results":"37","hashOfConfig":"33"},{"size":685,"mtime":1671581372822,"results":"38","hashOfConfig":"33"},{"size":6901,"mtime":1674208988695,"results":"39","hashOfConfig":"33"},{"size":2672,"mtime":1673261060445,"results":"40","hashOfConfig":"33"},{"size":354,"mtime":1673003654571,"results":"41","hashOfConfig":"33"},{"size":5952,"mtime":1673264805166,"results":"42","hashOfConfig":"33"},{"size":483,"mtime":1674208285248,"results":"43","hashOfConfig":"33"},{"size":1404,"mtime":1676421252690,"results":"44","hashOfConfig":"33"},{"size":837,"mtime":1673003654573,"results":"45","hashOfConfig":"33"},{"size":3106,"mtime":1673003654577,"results":"46","hashOfConfig":"33"},{"size":3631,"mtime":1673261060455,"results":"47","hashOfConfig":"33"},{"size":1936,"mtime":1673003654569,"results":"48","hashOfConfig":"33"},{"size":2736,"mtime":1673003654568,"results":"49","hashOfConfig":"33"},{"size":7242,"mtime":1674170478479,"results":"50","hashOfConfig":"33"},{"size":3538,"mtime":1673003654570,"results":"51","hashOfConfig":"33"},{"size":2864,"mtime":1674174002463,"results":"52","hashOfConfig":"33"},{"size":5482,"mtime":1676272132537,"results":"53","hashOfConfig":"33"},{"size":2421,"mtime":1674208988695,"results":"54","hashOfConfig":"33"},{"size":1391,"mtime":1675843452236,"results":"55","hashOfConfig":"33"},{"size":231,"mtime":1673261060439,"results":"56","hashOfConfig":"33"},{"size":10853,"mtime":1676420956939,"results":"57","hashOfConfig":"33"},{"size":5158,"mtime":1676580511273,"results":"58","hashOfConfig":"33"},{"size":890,"mtime":1673269731516,"results":"59","hashOfConfig":"33"},{"size":2885,"mtime":1673261060443,"results":"60","hashOfConfig":"33"},{"size":7182,"mtime":1676590894911,"results":"61","hashOfConfig":"33"},{"size":2284,"mtime":1676264501326,"results":"62","hashOfConfig":"33"},{"size":269,"mtime":1676272152929,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"qepjbk",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/index.js",[],["142","143"],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/App.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/index.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/session.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/User.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/UsersList.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/NavBar.js",["144","145","146","147","148","149","150","151","152","153","154"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LogoutButton from './auth/LogoutButton';\nimport lexflixLogo from '../images/lexflixLogo.png';\nimport { getAllProfilesThunk } from '../store/profiles';\nimport { logout } from '../store/session';\nimport './NavBar.css'\n\nconst NavBar = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { profId } = useParams();\n  const sessionUser = useSelector(state => state.session.user);\n  const userProfiles = Object.values(useSelector(state => state.profiles))\n  const profile = useSelector(state => state.profiles[+profId]);\n  const path = window.location.pathname;\n  const [show, handleShow] = useState(false);\n  const [showMenu, setShowMenu] = useState(false);\n\n  //helper function for nav bar \n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true)\n    } else handleShow(false)\n  }\n\n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = () => {\n      setShowMenu(false);\n    };\n    //event listener for drop down menu\n    document.addEventListener('click', closeMenu);\n    //clean up\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu])\n\n  // function setTimedLocalStorage(key, value, minutes) {\n  //   var expiration = new Date().getTime() + minutes * 60 * 1000;\n  //   localStorage.setItem(key, JSON.stringify({ value: value, expiration: expiration }));\n  // }\n\n  useEffect(() => {\n\n    if(sessionUser) {dispatch(getAllProfilesThunk())}\n    //event listener for nav bar background transition\n    window.addEventListener(\"scroll\", transitionNavBar)\n\n    // window.addEventListener(\"unload\", function (e) {\n    //     dispatch(logout());\n    // });\n\n    //clean up\n    return () => window.removeEventListener(\"scroll\", transitionNavBar)\n\n  }, [dispatch, path, profId])\n\n  return (<div className='whole-outer-nav-full'>\n    {\n      !sessionUser && path == '/login' && \n      <div className='outer-nav-bar' id='darker-background-nav'>\n      <div className='inner-nav-prof'>\n        <Link to='/' exact='true' className='outer-logo'>\n          <img src={lexflixLogo} alt='logo' className='logo' />\n        </Link>\n      </div>\n      <div className='action-outer-div'>\n      </div>\n    </div>\n    }\n    {\n      !sessionUser && path !== '/login' &&\n      <div className='outer-nav-bar' id='darker-background-nav'>\n        <div className='inner-nav-prof'>\n          <Link to='/' exact='true' className='outer-logo'>\n            <img src={lexflixLogo} alt='logo' className='logo' />\n          </Link>\n        </div>\n        <div className='action-outer-div'>\n          <button className='language-button'>\n            <i class=\"fa-solid fa-globe\"></i>\n            English\n          </button>\n          <button className='sign-in-button'>\n            <Link to='/login' exact='true' className='sign-in'>\n              Sign In\n            </Link>\n          </button>\n        </div>\n      </div>\n    }\n    {\n      sessionUser &&\n      <div className={`outer-nav-bar ${show && 'fixed'}`}>\n        <div className='inner-nav-prof'>\n          <Link to={`/browse/${profId}`} exact=\"true\" className='outer-logo'>\n            <img src={lexflixLogo} alt='logo' className='logo' />\n          </Link>\n          <Link to={`/browse/${profId}`} exact=\"true\" className='nav-home-link'>\n            <span>Home</span>\n          </Link>\n          <Link to={`/browse/${profId}/TV`} exact='true' className='nav-home-link'>\n            <span>TV Shows</span>\n          </Link>\n          <Link to={`/browse/${profId}/movies`} exact='true' className='nav-home-link'>\n            <span>Movies</span>\n          </Link>\n          <Link to={`/browse/${profId}/my-list`} exact='true' className='nav-home-link'>\n            <span>My List</span>\n          </Link>\n        </div>\n        <div className='action-outer-div-prof'>\n          <div className={`inner-div-prof-nav ${showMenu && 'carrot-transform'}`} onClick={openMenu}>\n            <img src={profile?.profile_img} alt='profile image' className='nav-bar-prof'></img>\n            <i class=\"fa-solid fa-caret-down\"></i>\n          </div>\n          {showMenu && (\n            <div className='whole-outer-drop-down'>\n              <div className='up-arrow-drop-down-div'>\n                <i class=\"fa-solid fa-caret-up\"></i>\n              </div>\n              <div className={`drop-down-menu ${userProfiles.length == 3 && \"smaller-nav\"} ${userProfiles.length < 3 && \"smallest-nav\"}`}>\n                {userProfiles.map(prof => (\n                  <Link to={`/browse/${prof.id}`} exact=\"true\" className={`outer-drop-down-div ${userProfiles.length == 3 && \"smaller-nav-prof\"}  ${userProfiles.length < 3 && \"smallest-nav-prof\"}`}>\n                    <img src={prof.profile_img} alt='profile image' className='drop-down-prof-image'></img>\n                    <h4 className='drop-down-menu-text'>{prof.username.length < 20 ? prof.username : prof.username.slice(0, 10) + '..'}</h4>\n                  </Link>\n                ))}\n                <Link to='/profiles/manage' className={`drop-down-manage-prof-div ${userProfiles.length == 3 && \"smaller-nav-manage\"}  ${userProfiles.length < 3 && \"smallest-nav-manage\"}`}>\n                  <div className='left-side-drop-svg'>\n                    <svg width=\"38\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" id='drop-down-edit' class=\"svg-icon svg-icon-edit\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.2071 7.79285L15.2071 0.792847L13.7929 2.20706L20.7929 9.20706L22.2071 7.79285ZM13.2071 3.79285C12.8166 3.40232 12.1834 3.40232 11.7929 3.79285L2.29289 13.2928C2.10536 13.4804 2 13.7347 2 14V20C2 20.5522 2.44772 21 3 21H9C9.26522 21 9.51957 20.8946 9.70711 20.7071L19.2071 11.2071C19.5976 10.8165 19.5976 10.1834 19.2071 9.79285L13.2071 3.79285ZM17.0858 10.5L8.58579 19H4V14.4142L12.5 5.91417L17.0858 10.5Z\" fill=\"currentColor\"></path></svg>\n                  </div>\n                  <div className='right-half-drop-manage'>\n                    <h4 className=\"drop-manage-prof-button\">Manage Profiles</h4>\n                  </div>\n                </Link>\n                <div className={`log-out-div ${userProfiles.length == 3 && \"smaller-nav-logout\"} ${userProfiles.length < 3 && \"smallest-nav-logout\"}`}>\n                  <LogoutButton />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    }\n  </div>\n  );\n}\n\nexport default NavBar;\n\n// style for nav bar when on manage profiles or edit \n// background-image: linear-gradient(180deg,rgba(0,0,0,.7) 10%,transparent);\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/auth/LoginForm.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/auth/ProtectedRoute.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/auth/SignUpForm.js",["155","156"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/session';\nimport splashPageBackground from '../../images/splashPageBackground.jpg'\nimport \"./auth.css\";\n\nconst SignUpForm = () => {\n  const [errors, setErrors] = useState([]);\n  const [hasSubmitted, setHasSubmitted] = useState(false);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [plan, setPlan] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let errs = []\n    if (!username) errs.push('Please provide username')\n    if (!password) errs.push('Please provide a password')\n    if (!email || !email.includes('@')) errs.push('Please provide a valid email')\n    if (password !== repeatPassword) errs.push('Passwords do not match.')\n    if (password.length > 255) errs.push('Password must be less than 255 characters.')\n    if (email.length > 255) errs.push('Email must be less than 255 characters.')\n    if (username.length > 40) errs.push('Username must be less than 40 characters.')\n    if (username === email) errs.push('Username and email cannot be the same')\n    if (!plan) errs.push('Please select a payment plan')\n    setErrors(errs)\n  }, [username, email, password, repeatPassword, plan]);\n\n  const onSignUp = async (e) => {\n    e.preventDefault();\n    setHasSubmitted(true);\n\n    if (password === repeatPassword) {\n      const data = await dispatch(signUp(username, email, password, plan));\n      if (data) {\n        setErrors(data)\n      }\n    }\n  };\n\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const updateRepeatPassword = (e) => {\n    setRepeatPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/profiles' />;\n  }\n\n  return (\n    <div className='whole-outer-sign-up'>\n      <div className='header-sign-up-div'>\n        <h1>Let's Get You Started</h1>\n      </div>\n      <form onSubmit={onSignUp} className='outer-whole-signup-form'>\n        <div className='right-half-outer-sign-up'>\n          <h2 className='sel-pay-title'>User Information</h2>\n          <div className='sign-up-whole-input-div'>\n            <label>User Name</label>\n            <input\n              type='text'\n              name='username'\n              onChange={updateUsername}\n              value={username}\n              className=\"sign-up-input-field\"\n            ></input>\n          </div>\n          <div className='sign-up-whole-input-div'>\n            <label>Email</label>\n            <input\n              type='text'\n              name='email'\n              onChange={updateEmail}\n              value={email}\n              className=\"sign-up-input-field\"\n            ></input>\n          </div>\n          <div className='sign-up-whole-input-div'>\n            <label>Password</label>\n            <input\n              type='password'\n              name='password'\n              onChange={updatePassword}\n              value={password}\n              className=\"sign-up-input-field\"\n            ></input>\n          </div>\n          <div className='sign-up-whole-input-div'>\n            <label>Repeat Password</label>\n            <input\n              type='password'\n              name='repeat_password'\n              onChange={updateRepeatPassword}\n              value={repeatPassword}\n              required=\"true\"\n              className=\"sign-up-input-field\"\n            ></input>\n          </div>\n        </div>\n        <div className='left-half-outer-sign-up'>\n          <h3 className='sel-pay-title'>Select a Payment Plan</h3>\n          <div className='outer-plan-selection'>\n            <div className='outer-plan-div'>\n              <div className='box-each-plan'>\n                <label className='plan-box' htmlFor=\"basic-with-ads\">Basic with ads</label>\n              </div>\n              <div>\n                <input\n                  type='radio'\n                  id=\"basic-with-ads\"\n                  name='plan'\n                  value={plan}\n                  onClick={() => setPlan('Basic with ads')}>\n                </input>\n              </div>\n              <span>$6.99/month</span>\n            </div>\n            <div className='outer-plan-div'>\n              <div className='box-each-plan'>\n                <label htmlFor=\"standard\">Standard</label>\n              </div>\n              <div>\n                <input\n                  type='radio'\n                  id=\"standard\"\n                  name='plan'\n                  value={plan}\n                  onClick={() => setPlan('Standard')}>\n                </input>\n              </div>\n              <span>$15.49/month</span>\n            </div>\n            <div className='outer-plan-div'>\n              <div className='box-each-plan'>\n                <label htmlFor=\"premium\">Premium</label>\n              </div>\n              <div>\n                <input\n                  type='radio'\n                  id=\"premium\"\n                  name='plan'\n                  value={plan}\n                  onClick={() => setPlan('Premium')}>\n                </input>\n              </div>\n              <span>$19.99/month</span>\n            </div>\n          </div>\n          <button type='submit' className='submit-login'>Sign Up</button>\n        </div>\n      </form>\n      <div className='errors-sign-up-div'>\n        {errors.map((error, ind) => (\n          <div key={ind}>{error}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n\n// type='radio'\n// name='Basic with ads'\n// onChange={updatePlan}\n// value={plan}\n// checked\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/auth/LogoutButton.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/movies.js",["157","158"],"const GETALLMOVIES = 'movies/getAllMovies'\nconst GETONEMOVIE = 'movies/getOneMovie'\n\n/* ___________ Action Creators   ___________ */\nexport const getAllMoviesAction = (movies) => {\n    return {\n        type: GETALLMOVIES,\n        movies\n    }\n}\n\nexport const getOneMovieAction = (movie) => {\n    return {\n        type: GETONEMOVIE,\n        movie\n    }\n}\n\n/* ___________ T H U N K S   ___________ */\nexport const getAllMoviesThunk = () => async (dispatch) => {\n    const response = await fetch('/api/movies/all');\n    if (response.ok) {\n        const movies = await response.json()\n        dispatch(getAllMoviesAction(movies))\n        return movies\n    }\n}\n\nexport const getOneMovieThunk = (movie_id) => async (dispatch) => {\n    const response = await fetch(`/api/movies/${movie_id}`);\n    if (response.ok) {\n        const movie = await response.json()\n        dispatch(getOneMovieAction(movie))\n        return movie\n    }\n}\n\n\n/* ___________ Tasks Reducer   ___________ */\nexport default function movieReducer(state={}, action) {\n    let newState = {};\n\n    switch (action.type){\n        case GETALLMOVIES:\n            action.movies.forEach(mov => newState[mov.id] = mov)\n            return newState;\n        case GETONEMOVIE:\n            newState = {...state}\n            newState[action.movie.id] = {... newState[action.movie.id], ...action.movie.id}\n        default:\n             return state\n    }\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/context/Modal.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/profiles.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/reviews.js",["159"],"//FULL CRUD\n\n/* ----- TYPES ------ */\nconst GETALLREVIEWS = 'reviews/getAllReviews'\nconst GETREVIEW = 'reviews/getReview'\nconst ADDREVIEW = \"review/addReview\";\nconst EDITREVIEW = \"review/editReview\";\nconst DELETEREVIEW = 'review/deleteReview';\n\n/* ----- ACTIONS ------ */\nconst getAllReviewsAction = (reviews) => {\n    return {\n        type: GETALLREVIEWS,\n        reviews\n    }\n};\n\nconst getReviewAction = (review) => {\n    return {\n        type: GETREVIEW,\n        review\n    }\n};\n\nconst addReviewAction = (review) => {\n    return {\n        type: ADDREVIEW,\n        review\n    }\n};\n\nconst editReviewAction = (review) => {\n    return {\n        type: EDITREVIEW,\n        review\n    }\n};\n\nconst deleteReviewAction = (reviewId) => {\n    return {\n        type: DELETEREVIEW,\n        reviewId\n    }\n};\n \n\n/* ------ THUNKS ------ */\nexport const getAllReviewsThunk = (profileId) => async dispatch => {\n    const response = await fetch(`/api/review/profile/${profileId}/all`);\n\n    if (response.ok) {\n        const reviews = await response.json();\n        dispatch(getAllReviewsAction(reviews))\n        return reviews;\n    }\n};\n\nexport const getReviewThunk = (profileId, movieId) => async dispatch => {\n    const response = await fetch(`/api/review/profile/${profileId}/movie/${movieId}`);\n\n    if (response.ok) {\n        const review = await response.json();\n        dispatch(getReviewAction(review))\n        return review;\n    }\n};\n\nexport const addReviewThunk = (profileId, movieId, review) => async dispatch => {\n    const response = await fetch(`/api/review/profile/${profileId}/movie/${movieId}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review)\n    });\n\n    if (response.ok) {\n        const newReview = await response.json();\n        await dispatch(addReviewAction(newReview));\n        return newReview;\n    }\n};\n\nexport const editReviewThunk = (review) => async dispatch => {\n    const response = await fetch(`/api/review/${review.id}/edit`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review)\n    });\n\n    if (response.ok) {\n        const newReview = await response.json();\n        await dispatch(editReviewAction(newReview));\n        return newReview;\n    }\n};\n\nexport const deleteReviewThunk = (reviewId) => async dispatch => {\n    const response = await fetch(`/api/review/${reviewId}/delete`, {\n        method: 'DELETE'\n    });\n\n    if (response.ok) {\n        const review = await response.json();\n        await dispatch(deleteReviewAction(reviewId));\n        return review;\n    }\n};\n\n\n/* ------ REDUCER ------ */\nconst reviewsReducer = (state = {}, action) => {\n    let newState = {};\n    switch (action.type) {\n        case GETALLREVIEWS:\n            action.reviews.forEach((review) => {\n                newState[review.id] = review;\n            });\n            return newState;\n        case GETREVIEW:\n            newState = { ...state };\n            newState[action.review.id] = { ...newState[action.review.id], ...action.review}\n        case ADDREVIEW:\n            newState = { ...state };\n            newState[action.review.id] = action.review;\n            return newState;\n        case EDITREVIEW:\n            newState = { ...state };\n            newState[action.review.id] = { ...newState[action.review.id], ...action.review}\n            return newState;\n        case DELETEREVIEW:\n            newState = { ...state };\n            delete newState[action.reviewId];\n            return newState;\n        default:\n            return state;\n    }\n\n}\n\nexport default reviewsReducer;\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/Profiles/index.js",["160"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { getAllProfilesThunk } from \"../../store/profiles\";\nimport './profiles.css'\n\nexport default function GetProfiles() {\n    const dispatch = useDispatch();\n    const profiles = Object.values(useSelector(state => state.profiles))\n\n    useEffect(() => {\n        dispatch(getAllProfilesThunk())\n    }, [dispatch])\n\n    if (!profiles ) return null;\n\n    return (\n        <div className=\"outer-prof-div\">\n            <h1 className=\"select-prof-text\">Who's Watching?</h1>\n            <div className=\"profiles-box\">\n            {!profiles.includes(404) && profiles.map(prof => (\n                <NavLink to={`/browse/${prof.id}`} className=\"outer-indiv-profile\">\n                    <div className=\"outer-prof-img\">\n                        <img src={prof.profile_img} alt='profile image' className=\"profile-img\"></img>\n                    </div>\n                    <div className=\"profiles-username-div\">\n                        <h4 className=\"profile-username\">{prof.username}</h4>\n                    </div>\n                </NavLink>\n            ))}\n            {\n                profiles.length < 5 && (\n                    <NavLink to={`/profiles/create`} className=\"outer-indiv-profile\">\n                    <div className=\"outer-prof-img\">\n                        <div className=\"add-prof-div\">\n                        <i class=\"fa-sharp fa-solid fa-circle-plus\"></i>\n                        </div>\n                    </div>\n                    <div className=\"profiles-username-div\">\n                        <h4 className=\"profile-username\">Add Profile</h4>\n                    </div>\n                </NavLink>\n                )\n            }\n            </div>\n            <NavLink to='/profiles/manage' className=\"manage-prof-button\">Manage Profiles</NavLink>\n        </div>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/ManageProfiles/index.js",["161","162"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport { getAllProfilesThunk } from \"../../store/profiles\";\nimport './manageProfiles.css'\n\nexport default function ManageProfiles() {\n    const dispatch = useDispatch();\n    const profiles = Object.values(useSelector(state => state.profiles))\n\n    useEffect(() => {\n        dispatch(getAllProfilesThunk())\n    }, [dispatch])\n\n    if (!profiles ) return null;\n\n    return (\n        <div className=\"outer-prof-div\">\n            <h1 className=\"select-prof-text\">Manage Profiles:</h1>\n            <div className=\"profiles-box\">\n                {!profiles.includes(404) && profiles.map(prof => (\n                    <NavLink to={`/ManageProfiles/${prof.id}`} className=\"outer-indiv-manage-profile\">\n                        <div className=\"outer-prof-manage-img\">\n                            <img src={prof.profile_img} alt='profile image' className=\"profile-img\" />\n                            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"svg-icon svg-icon-edit\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.2071 7.79285L15.2071 0.792847L13.7929 2.20706L20.7929 9.20706L22.2071 7.79285ZM13.2071 3.79285C12.8166 3.40232 12.1834 3.40232 11.7929 3.79285L2.29289 13.2928C2.10536 13.4804 2 13.7347 2 14V20C2 20.5522 2.44772 21 3 21H9C9.26522 21 9.51957 20.8946 9.70711 20.7071L19.2071 11.2071C19.5976 10.8165 19.5976 10.1834 19.2071 9.79285L13.2071 3.79285ZM17.0858 10.5L8.58579 19H4V14.4142L12.5 5.91417L17.0858 10.5Z\" fill=\"currentColor\"></path></svg>\n                        </div>\n                        <div className=\"profiles-username-div\">\n                            <h4 className=\"profile-username\">{prof.username}</h4>\n                        </div>\n                    </NavLink>\n                ))}\n                {\n                    profiles.length < 5 && (\n                        <NavLink to={`/profiles/create`} className=\"outer-indiv-profile\">\n                            <div className=\"outer-prof-img\">\n                                <div className=\"add-prof-div\">\n                                    <i class=\"fa-sharp fa-solid fa-circle-plus\"></i>\n                                </div>\n                            </div>\n                            <div className=\"profiles-username-div\">\n                                <h4 className=\"profile-username\">Add Profile</h4>\n                            </div>\n                        </NavLink>\n                    )\n                }\n            </div>\n            <NavLink to='/profiles' className=\"done-manage-button\">Done</NavLink>\n        </div>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/EditProfile/index.js",["163","164","165","166"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { editProfileThunk, getAllProfilesThunk, deleteProfileThunk } from \"../../store/profiles\";\nimport './editProfile.css'\n\nexport default function EditProfile() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { id } = useParams();\n    // const profiles = Object.values(useSelector(state => state.profiles))\n    const profile = useSelector(state => state.profiles[+id])\n    const [username, setUsername] = useState(profile?.username || \"\")\n    const [img, setImg] = useState(profile?.profile_img || \"\")\n    const [validationErrors, setValidationErrors] = useState([]);\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n\n    useEffect(() => {\n        dispatch(getAllProfilesThunk())\n        const errors = [];\n        if (!username) errors.push(\"Username is required\");\n        if (username.length > 40) errors.push(\"Username must be less than 40 characters\");\n        setValidationErrors(errors);\n    }, [username, img, dispatch])\n\n    const onSubmit = () => {\n        setHasSubmitted(true);\n\n        if (validationErrors.length) return alert(`Can't Save Changes`);\n\n        if (!validationErrors.length){\n            const updatedProfile = {\n                id: profile.id,\n                user_id: profile.user_id,\n                username\n    \n            }\n    \n            dispatch(editProfileThunk(updatedProfile))\n            history.push('/profiles/manage')\n        }\n    }\n\n    const deleteProfile = () => {\n        dispatch(deleteProfileThunk(+id))\n        history.push(`/profiles/manage`)\n    }\n\n    if (!profile) return null;\n\n    // console.log(profile)\n\n    return (\n        <form onSubmit={onSubmit} className=\"outer-edit-prof\">\n            <div className=\"inner-edit-prof\">\n                <div className=\"edit-prof-div\">\n                    <h1 className=\"edit-prof-text\">Edit Profile</h1>\n                </div>\n                <div className=\"outer-prof-details\">\n                    <div className=\"prof-img-div\">\n                        <img src={profile.profile_img} alt='profile image' className=\"edit-prof-img\"></img>\n                    </div>\n                    <div className=\"inner-prof-dets\">\n                        {\n                            username && username.length <= 40 &&\n                            <div className=\"outer-input-div\">\n                                <input className=\"input-username\"\n                                    type=\"text\"\n                                    onChange={(e) => setUsername(e.target.value)}\n                                    value={username}\n                                    placeholder=\"Name\" />\n                            </div>\n                        }\n                        {\n                            !username && \n                            <div className=\"outer-input-div\">\n                                <input className=\"input-username-bad\"\n                                    type=\"text\"\n                                    onChange={(e) => setUsername(e.target.value)}\n                                    value={username}\n                                    placeholder=\"Name\" />\n                                {/* <span className=\"no-name-red\">Please enter a valid name under 40 characters</span> */}\n                                {validationErrors.map((error) =>\n                                    <span className=\"no-name-red\">{error}</span>\n                                )}\n                            </div>\n                        }\n                                                {\n                            username.length > 40 && \n                            <div className=\"outer-input-div\">\n                                <input className=\"input-username-bad\"\n                                    type=\"text\"\n                                    onChange={(e) => setUsername(e.target.value)}\n                                    value={username}\n                                    placeholder=\"Name\" />\n                                {/* <span className=\"no-name-red\">Please enter a valid name under 40 characters</span> */}\n                                {validationErrors.map((error) =>\n                                    <span className=\"no-name-red\">{error}</span>\n                                )}\n                            </div>\n                        }\n                        <div className=\"outer-lang-div\">\n                            <h2 className=\"lang-text-title\">Language:</h2>\n                            <div className='edit-language-button'>\n                                <i class=\"fa-solid fa-globe\" id=\"new-lang\"></i>\n                                English\n                            </div>\n                        </div>\n                        <div className=\"outer-lang-div\">\n                            <h2 className=\"lang-text-title\">Maturity Settings:</h2>\n                            <button className=\"maturity\">\n                                All Maturity Ratings\n                            </button>\n                        </div>\n                        <div className=\"outer-lang-div\">\n                            <h2 className=\"lang-text-title\">Autoplay controls:</h2>\n                            <div className=\"extra-edit-dets\">\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"svg-icon svg-icon-check-mark\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.68239 19.7312L23.6824 5.73115L22.3178 4.26904L8.02404 17.6098L2.70718 12.293L1.29297 13.7072L7.29297 19.7072C7.67401 20.0882 8.28845 20.0988 8.68239 19.7312Z\" fill=\"currentColor\"></path></svg>\n                                <span>Autoplay next episode in a series on all devices.</span>\n                            </div>\n                            <div className=\"extra-edit-dets\">\n                                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"svg-icon svg-icon-check-mark\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.68239 19.7312L23.6824 5.73115L22.3178 4.26904L8.02404 17.6098L2.70718 12.293L1.29297 13.7072L7.29297 19.7072C7.67401 20.0882 8.28845 20.0988 8.68239 19.7312Z\" fill=\"currentColor\"></path></svg>\n                                <span>Autoplay previews while browsing on all devices.</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"edit-prof-controls\">\n                    <button className=\"done-manage-button\"\n                        type=\"submit\"\n                        onClick={() => onSubmit()}\n                    >Save</button>\n                    <button onClick={() => history.push('/profiles/manage')} className=\"manage-prof-button\">Cancel</button>\n                    <button\n                        onClick={() => deleteProfile()} className=\"manage-prof-button\">Delete Profile</button>\n                </div>\n            </div>\n        </form>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/addProfile/index.js",["167","168","169","170"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { createProfileThunk, getAllProfilesThunk } from \"../../store/profiles\";\nimport \"./addProfile.css\"\n\nexport default function AddProfile() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [username, setUsername] = useState(\"\")\n    const [validationErrors, setValidationErrors] = useState([]);\n    const sessionUser = useSelector(state => state.session.user);\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n\n    useEffect(() => {\n        const errors = [];\n        if (!username) errors.push(\"Please enter a name\");\n        if (username.length > 40) errors.push(\"Username must be less than 40 characters\");\n        setValidationErrors(errors);\n    }, [username])\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        setHasSubmitted(true);\n        if (validationErrors.length) return alert(`Can't Add Profile`);\n\n        const newProfile = {\n            user_id: sessionUser.id,\n            username\n        }\n\n        await dispatch(createProfileThunk(newProfile))\n        // await dispatch(getAllProfilesThunk())\n        history.push(\"/profiles/manage\")\n    }\n\n\n    return (\n        <form onSubmit={onSubmit} className=\"outer-whole-add-profile\">\n            <div className=\"inner-whole-add-prof\">\n                <h1 className=\"add-prof-title\">Add Profile</h1>\n                <h2 className=\"add-dets-span\">Add a profile for another person watching Netflix.</h2>\n                <div className=\"outer-add-prof\">\n                    <img src=\"https://occ-0-1339-1340.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABUoj4FT-0Rr558WbETiintMnmH2JKw4l_p4MdMoxqVx7YXwsvLvvnGUtx3HKZN_BJFH4EHpXn5KqSCBVxLrRz0n4gk64yyeAFw.png?r=229\" alt=\"profile image\" className=\"prof-add-img\"></img>\n                    {\n                        !hasSubmitted &&\n                        <div className=\"outer-input-div-add\">\n                            <input className=\"input-username-add\"\n                                type=\"text\"\n                                onChange={(e) => setUsername(e.target.value)}\n                                value={username}\n                                placeholder=\"Name\" />\n                        </div>\n                    }{\n                        hasSubmitted && validationErrors &&\n                        <div className=\"outer-input-div-add\">\n                            <input className=\"input-username-add-bad\"\n                                type=\"text\"\n                                onChange={(e) => setUsername(e.target.value)}\n                                value={username}\n                                placeholder=\"Name\" />\n                            {validationErrors.map((error) => \n                            <span className=\"no-name-red\">{error}</span>\n                            )}\n                        </div>\n                    }\n                </div>\n                <div className=\"edit-prof-controls\" id=\"add-prof\">\n                    <button className=\"done-manage-button\"\n                        type=\"submit\"\n                    // onClick={() => onSubmit()}\n                    >Continue</button>\n                    <button onClick={() => history.push('/profiles/manage')} className=\"manage-prof-button\">Cancel</button>\n                </div>\n            </div>\n        </form>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/HomePage/HomePage.js",["171"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { getAllMoviesThunk } from '../../store/movies';\nimport { getAllReviewsThunk } from '../../store/reviews';\nimport HomePageCarousel from '../HomePageCarousels/HomePageCarousels';\nimport { Modal } from '../../context/Modal';\nimport MovieDetail from \"../MovieDetailModal/MovieModal\";\nimport './homePage.css'\n\nexport default function HomePage() {\n    const dispatch = useDispatch();\n    const movies = Object.values(useSelector(state => state.movies))\n    const headerMovie = useSelector(state => state.movies[21])\n    const [showModal, setShowModal] = useState(false);\n    const { profId } = useParams();\n\n    useEffect(() => {\n        dispatch(getAllMoviesThunk())\n        dispatch(getAllReviewsThunk(+profId))\n    }, [dispatch, profId])\n\n    if (!headerMovie || !movies) return null;\n\n    return (\n        <div className='whole-outer-home-page'>\n            <div className='whole-outer-movie-body'\n                style={{\n                    backgroundSize: \"cover\",\n                    backgroundImage: `url(\"${headerMovie.prev_img}\")`,\n                    backgroundPosition: 'center center'\n                }}>\n            </div>\n            <div className='banner-buttons'>\n                <NavLink to={`/${profId}/watch/${headerMovie.id}`} exact='true'>\n                    <button className='play-header-button'>\n                        <i class=\"fa-sharp fa-solid fa-play\"></i>\n                        Play\n                    </button>\n                </NavLink>\n                <div className='more-info-details-button' onClick={() => setShowModal(true)}>\n                    <svg width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3ZM1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12ZM13 10V18H11V10H13ZM12 8.5C12.8284 8.5 13.5 7.82843 13.5 7C13.5 6.17157 12.8284 5.5 12 5.5C11.1716 5.5 10.5 6.17157 10.5 7C10.5 7.82843 11.1716 8.5 12 8.5Z\" fill=\"currentColor\"></path></svg>\n                    <span className='details-button-header'>More Info</span>\n                </div>\n                {showModal && (\n                      <Modal onClose={() => setShowModal(false)}>\n                        <MovieDetail setShowModal={setShowModal} movieId={headerMovie.id}/>\n                      </Modal>\n                )}\n            </div>\n            <div className='fade-bottom'></div>\n            <HomePageCarousel/>\n            <h1 className='more-movies-holder'></h1>\n        </div>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/HomePageCarousels/HomePageCarousels.js",["172","173","174"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// Import Swiper React components\nimport { useParams } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport MovieReviewComponent from \"../MovieReview/MovieReview\";\nimport { getAllReviewsThunk } from \"../../store/reviews\";\nimport { Modal } from '../../context/Modal';\nimport MovieDetail from \"../MovieDetailModal/MovieModal\";\nimport { movieIs } from \"../../store/repeatfuncs\";\n\n// Import Swiper styles\nimport 'swiper/swiper.min.css';\nimport 'swiper/modules/pagination/pagination.min.css';\nimport 'swiper/modules/navigation/navigation.min.css';\n\nimport './styles.css';\n\n// import required modules\nimport { Pagination, Navigation } from \"swiper\";\nimport { getAllMoviesThunk } from '../../store/movies';\nimport { Link } from \"react-router-dom\";\n\n\nexport default function HomePageCarousel() {\n  const dispatch = useDispatch();\n  const movies = Object.values(useSelector(state => state.movies))\n  const moviesCarousel = movies.slice(0, 18)\n  const { profId } = useParams();\n  const [currMovieId, setCurrMovieId] = useState();\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAllMoviesThunk())\n    dispatch(getAllReviewsThunk(+profId))\n  }, [dispatch, profId])\n\n  // const setMovieId = (movieId) => {\n  //   setCurrMovieId(movieId);\n  // };\n\n  // useEffect(() => {\n  //   if (!currMovieId) return;\n\n  //   //event listener for drop down menu\n  //   document.addEventListener('mouseover', setMovieId);\n  //   //clean up\n  //   // return () => document.removeEventListener(\"click\", closeMenu);\n  // }, [showMenu])\n\n\n  const hoverRight = (num) => {\n    if (num === 1 || num === 7 || num === 13) return true;\n  }\n\n  const hoverLeft = (num) => {\n    if (num === 6 || num === 12 || num === 18) return true;\n  }\n\n  if (!movies) return null;\n\n  return (\n    <div className=\"whole-carousel-outer-div\">\n      <h1 className=\"movie-carousel-title\">Movies</h1>\n      <Swiper\n        slidesPerView={6}\n        spaceBetween={7}\n        slidesPerGroup={6}\n        loop={true}\n        loopFillGroupWithBlank={true}\n        pagination={{\n          clickable: true\n        }}\n        navigation={true}\n        modules={[Pagination, Navigation]}\n        className=\"mySwiper\"\n        allowTouchMove={false}\n      >{\n          moviesCarousel.map(movie => (\n            <SwiperSlide>\n              <div className={`swiper-indiv-div ${hoverRight(movie.id) && \"hover-entire-right\"} ${hoverLeft(movie.id) && \"hover-entire-left\"}`}>\n                <img src={movie.prev_img} alt='movie poster' className=\"swiper-img\" onMouseOver={() => setCurrMovieId(movie.id)}></img>\n                {/* {console.log(\"------------\", currMovieId)} */}\n                <div className=\"hidden-details-info\">\n                  <div className=\"top-half-hidden-details\">\n                    <Link to={`/${profId}/watch/${movie.id}`} className=\"play-butt-details\">\n                      <svg width=\"13\" height=\"13\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 2.69127C4 1.93067 4.81547 1.44851 5.48192 1.81506L22.4069 11.1238C23.0977 11.5037 23.0977 12.4963 22.4069 12.8762L5.48192 22.1849C4.81546 22.5515 4 22.0693 4 21.3087V2.69127Z\" fill=\"currentColor\"></path></svg>\n                    </Link>\n                    <div className=\"add-to-my-list\">\n                      <svg width=\"13\" height=\"13\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11 2V11H2V13H11V22H13V13H22V11H13V2H11Z\" fill=\"currentColor\"></path></svg>\n                    </div>\n                    <MovieReviewComponent movieId={currMovieId}/>\n                    <div className=\"get-details-button\" onClick={() => setShowModal(true)}>\n                      <svg width=\"13\" height=\"13\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"down-arrow-details\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.293 7.29297L12.0001 14.5859L4.70718 7.29297L3.29297 8.70718L11.293 16.7072C11.4805 16.8947 11.7349 17.0001 12.0001 17.0001C12.2653 17.0001 12.5196 16.8947 12.7072 16.7072L20.7072 8.70718L19.293 7.29297Z\" fill=\"currentColor\"></path></svg>\n                    </div>\n                    {showModal && (\n                      <Modal onClose={() => setShowModal(false)}>\n                        <MovieDetail setShowModal={setShowModal} movieId={currMovieId}/>\n                      </Modal>\n                    )}\n                  </div>\n                  <div className=\"bottom-half-hidden-details\">\n                    <div className=\"top-bottom-movie-details\">\n                      <span className=\"new-span\">New</span>\n                      <div className={`movie-detail-rating \n                      ${movie.rating == \"R\"|| movie.rating == \"G\" || movie.rating == \"PG\" ? \"smaller-rating\": \"\"}`}>\n                        <span className=\"movie-rating-txt\">{movie.rating}</span>\n                      </div>\n                      <span className=\"movie-duration\">{movie.duration}</span>\n                    </div>\n                    <div className=\"bott-bottom-movie-details\">\n                      <span className=\"movie-is-text\">{movieIs(movie.movie_is)}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </SwiperSlide>\n          ))\n        }\n      </Swiper>\n    </div>\n  );\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/MainSplashPage/SplashPage.js",["175","176","177","178"],"import React, {useEffect} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport splashPageBackground from '../../images/splashPageBackground.jpg'\nimport linkedin from \"../../images/linkedin.png\"\nimport github from \"../../images/github.png\"\nimport { logout } from '../../store/session';\nimport './splashPage.css'\n\nexport default function SplashPage() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    //in order to get local storage value(profileIdd)\n//     function getTimedLocalStorage(key) {\n//         const data = JSON.parse(localStorage.getItem(key));\n//         if (data && data.expiration > new Date().getTime()) {\n//           return data.value;\n//         } else {\n//           localStorage.removeItem(key);\n//           return null;\n//         }\n//       }\n\n//     useEffect(() => {\n//         const myData = getTimedLocalStorage(\"currProfileId\");\n//         if (myData) {\n//             history.push(`/browse/${myData}`)\n//         } else {\n//           dispatch(logout());\n//         }\n//   }, [dispatch])\n\n    useEffect(async() => {\n        await dispatch(logout());\n    }, [dispatch])\n\n    return (\n        <div className='whole-outer-splash-page'>\n            <div className='whole-outer-splash-body'\n                style={{\n                    backgroundSize: \"cover\",\n                    backgroundImage: `url(\"${splashPageBackground}\")`,\n                    backgroundPosition: 'center center'\n                }}>\n                <div className='splash-page-title'>\n                    <div className='splash-page-title-text'>\n                        <h1>Unlimited movies, TV shows, and more.</h1>\n                        <span>Watch anywhere. Cancel anytime.</span>\n                    </div>\n                </div>\n            </div>\n            <div className='lex-details'>\n                <h1 className='footer-lex-text'>Created and Styled by Alexis West · </h1>\n                <a target=\"_blank\" href='https://www.linkedin.com/in/alexis-west-596a6b203/' className='footer-link-div'>\n                    <img id=\"linkedin\" src={linkedin} alt=\"li\"></img>\n                </a>\n                <a target=\"_blank\" href='https://github.com/alexiswest98' className='footer-link-div'>\n                    <img id=\"github-icon\" src={github} alt=\"gh\"></img>\n                </a>\n            </div>\n        </div>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/TrailerPage/TrailerPage.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/ComingSoon/index.js",["179"],"import React, { useEffect } from 'react';\nimport \"./index.css\"\n\nexport default function ComingSoon() {\n\n    return (\n        <div className='whole-outer-coming-soon-page'>\n            <h1>Coming Soon...</h1>\n        </div>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/MovieReview/MovieReview.js",["180","181","182","183","184","185","186","187","188"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getAllMoviesThunk } from \"../../store/movies\";\nimport \"./movieReview.css\"\nimport td from \"../../images/td.png\"\nimport dtu from \"../../images/dtu.png\"\nimport td2 from \"../../images/td2.png\"\nimport dtu2 from \"../../images/dtu2.png\"\nimport textbubb from \"../../images/textbubb.png\"\nimport { addReviewThunk } from \"../../store/reviews\";\nimport { getAllReviewsThunk } from \"../../store/reviews\";\nimport { editReviewThunk } from \"../../store/reviews\";\nimport { deleteReviewThunk } from \"../../store/reviews\";\n\nexport default function MovieReviewComponent({ movieId }) {\n    const dispatch = useDispatch();\n    // const movies = Object.values(useSelector(state => state.movies))\n    const allReviews = Object.values(useSelector(state => state.reviews))\n    const review = allReviews.filter(rev => rev.movie_id == movieId)[0]\n    const { profId } = useParams();\n    const path = window.location.pathname;\n    // const [thumbsDowDel, setThumbsDownDel] = useState(false)\n    // const [thumbsNeutralDel, setThumbsNeutralDel] = useState(false)\n    // const [thumbsUpDel, setThumbsUpDel] = useState(false)\n    const [mylist, setMylist] = useState(false)\n\n    const isReviewThumbsDown = (movie_id) => {\n        if (review?.rating === \"Thumbs Down\") {\n            // setThumbsDown(true)\n            return true;\n        }\n        else return false\n    }\n\n    const isReviewThumbsNeutral = (movie_id) => {\n        if (review?.rating === \"Thumbs Neutral\") {\n            // setThumbsNeutral(true)\n            return true\n        }\n        else return false\n    }\n\n    const isReviewThumbsUp = (movie_id) => {\n        if (review?.rating === \"Thumbs Up\") {\n            return true\n        }\n        else return false\n    }\n\n\n    const deleteReview = () => {\n        if(review) {\n            dispatch(deleteReviewThunk(review.id))\n        }\n    }\n\n    // choices=[('Thumbs Down'), ('Thumbs Neutral'), ('Thumbs Up')],\n    const addtdReview = async (movieId) => {\n        if(!review) {\n            const newReview = {\n            movie_id: movieId,\n            profile_id: profId,\n            rating: 'Thumbs Down'\n            }\n\n            await dispatch(addReviewThunk(profId, movieId, newReview))\n        }\n        if(review) {\n            const editReview = {\n            id: review.id,\n            movie_id: movieId,\n            profile_id: profId,\n            rating: 'Thumbs Down'\n            }\n\n            await dispatch(editReviewThunk(editReview))\n        }\n    }\n\n    const addtnReview = async(movieId) => {\n        if(!review) {\n            const newReview = {\n                movie_id: movieId,\n                profile_id: profId,\n                rating: 'Thumbs Neutral'\n            }\n\n            await dispatch(addReviewThunk(profId, movieId, newReview))\n        }\n        if(review) {\n            const editReview = {\n                id: review.id,\n                movie_id: movieId,\n                profile_id: profId,\n                rating: 'Thumbs Neutral'\n            }\n\n            await dispatch(editReviewThunk(editReview))\n        }\n    }\n\n    const addtuReview = async(movieId) => {\n        if(!review) {\n            const newReview = {\n                movie_id: movieId,\n                profile_id: profId,\n                rating: 'Thumbs Up'\n            }\n\n            await dispatch(addReviewThunk(profId, movieId, newReview))\n        }\n        if(review) {\n            const editReview = {\n                id: review.id,\n                movie_id: movieId,\n                profile_id: profId,\n                rating: 'Thumbs Up'\n            }\n\n            await dispatch(editReviewThunk(editReview))\n        }\n    }\n\n    //function to change styling for my list css\n\n    useEffect(() => {\n        if (path === `/browse/${profId}/my-list`) {\n            setMylist(true)\n        }\n    }, [path])\n\n\n    return (\n        <div className='rate-movie-button' id={mylist && \"my-list-rate-movie-button\"}>\n            <div className={`thumbs-down-div ${isReviewThumbsDown(movieId) && \"extra-styling\"}`}  id={mylist && \"my-list-thumbs-down-div\"}>\n                {!isReviewThumbsDown(movieId) && <img src={td} className=\"thumbs-down\" onClick={()=> addtdReview(movieId)}></img>}\n                {isReviewThumbsDown(movieId) && <img src={td2} className=\"thumbs-down\" onClick={() => deleteReview()}></img>}\n            </div>\n            <div className={`thumbs-up-holder ${isReviewThumbsNeutral(movieId) && \"extra-styling\"}`} id={mylist && \"my-list-thumbs-up-holder\"}>\n                {!isReviewThumbsNeutral(movieId) && !mylist && <svg width=\"15\" height=\"15\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"thumbs-up\" onClick={()=> addtnReview(movieId)}><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.696 8.7732C10.8947 8.45534 11 8.08804 11 7.7132V4H11.8377C12.7152 4 13.4285 4.55292 13.6073 5.31126C13.8233 6.22758 14 7.22716 14 8C14 8.58478 13.8976 9.1919 13.7536 9.75039L13.4315 11H14.7219H17.5C18.3284 11 19 11.6716 19 12.5C19 12.5929 18.9917 12.6831 18.976 12.7699L18.8955 13.2149L19.1764 13.5692C19.3794 13.8252 19.5 14.1471 19.5 14.5C19.5 14.8529 19.3794 15.1748 19.1764 15.4308L18.8955 15.7851L18.976 16.2301C18.9917 16.317 19 16.4071 19 16.5C19 16.9901 18.766 17.4253 18.3994 17.7006L18 18.0006L18 18.5001C17.9999 19.3285 17.3284 20 16.5 20H14H13H12.6228C11.6554 20 10.6944 19.844 9.77673 19.5382L8.28366 19.0405C7.22457 18.6874 6.11617 18.5051 5 18.5001V13.7543L7.03558 13.1727C7.74927 12.9688 8.36203 12.5076 8.75542 11.8781L10.696 8.7732ZM10.5 2C9.67157 2 9 2.67157 9 3.5V7.7132L7.05942 10.8181C6.92829 11.0279 6.72404 11.1817 6.48614 11.2497L4.45056 11.8313C3.59195 12.0766 3 12.8613 3 13.7543V18.5468C3 19.6255 3.87447 20.5 4.95319 20.5C5.87021 20.5 6.78124 20.6478 7.65121 20.9378L9.14427 21.4355C10.2659 21.8094 11.4405 22 12.6228 22H13H14H16.5C18.2692 22 19.7319 20.6873 19.967 18.9827C20.6039 18.3496 21 17.4709 21 16.5C21 16.4369 20.9983 16.3742 20.995 16.3118C21.3153 15.783 21.5 15.1622 21.5 14.5C21.5 13.8378 21.3153 13.217 20.995 12.6883C20.9983 12.6258 21 12.5631 21 12.5C21 10.567 19.433 9 17.5 9H15.9338C15.9752 8.6755 16 8.33974 16 8C16 6.98865 15.7788 5.80611 15.5539 4.85235C15.1401 3.09702 13.5428 2 11.8377 2H10.5Z\" fill=\"currentColor\"></path></svg>}\n                {!isReviewThumbsNeutral(movieId) && mylist && <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"thumbs-up\" onClick={()=> addtnReview(movieId)}><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.696 8.7732C10.8947 8.45534 11 8.08804 11 7.7132V4H11.8377C12.7152 4 13.4285 4.55292 13.6073 5.31126C13.8233 6.22758 14 7.22716 14 8C14 8.58478 13.8976 9.1919 13.7536 9.75039L13.4315 11H14.7219H17.5C18.3284 11 19 11.6716 19 12.5C19 12.5929 18.9917 12.6831 18.976 12.7699L18.8955 13.2149L19.1764 13.5692C19.3794 13.8252 19.5 14.1471 19.5 14.5C19.5 14.8529 19.3794 15.1748 19.1764 15.4308L18.8955 15.7851L18.976 16.2301C18.9917 16.317 19 16.4071 19 16.5C19 16.9901 18.766 17.4253 18.3994 17.7006L18 18.0006L18 18.5001C17.9999 19.3285 17.3284 20 16.5 20H14H13H12.6228C11.6554 20 10.6944 19.844 9.77673 19.5382L8.28366 19.0405C7.22457 18.6874 6.11617 18.5051 5 18.5001V13.7543L7.03558 13.1727C7.74927 12.9688 8.36203 12.5076 8.75542 11.8781L10.696 8.7732ZM10.5 2C9.67157 2 9 2.67157 9 3.5V7.7132L7.05942 10.8181C6.92829 11.0279 6.72404 11.1817 6.48614 11.2497L4.45056 11.8313C3.59195 12.0766 3 12.8613 3 13.7543V18.5468C3 19.6255 3.87447 20.5 4.95319 20.5C5.87021 20.5 6.78124 20.6478 7.65121 20.9378L9.14427 21.4355C10.2659 21.8094 11.4405 22 12.6228 22H13H14H16.5C18.2692 22 19.7319 20.6873 19.967 18.9827C20.6039 18.3496 21 17.4709 21 16.5C21 16.4369 20.9983 16.3742 20.995 16.3118C21.3153 15.783 21.5 15.1622 21.5 14.5C21.5 13.8378 21.3153 13.217 20.995 12.6883C20.9983 12.6258 21 12.5631 21 12.5C21 10.567 19.433 9 17.5 9H15.9338C15.9752 8.6755 16 8.33974 16 8C16 6.98865 15.7788 5.80611 15.5539 4.85235C15.1401 3.09702 13.5428 2 11.8377 2H10.5Z\" fill=\"currentColor\"></path></svg>}\n                {isReviewThumbsNeutral(movieId) && !mylist && <svg width=\"15\" height=\"15\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"thumbs-up\" onClick={() => deleteReview()}><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.407 6.25579L13.313 5.50407C13.1342 4.07353 11.9181 3 10.4764 3C10.2133 3 10 3.21331 10 3.47644V6.7132C10 6.90062 9.94733 7.08427 9.848 7.2432L7.90742 10.3481C7.64516 10.7677 7.23665 11.0752 6.76086 11.2112L4.72528 11.7928C4.29598 11.9154 4 12.3078 4 12.7543V18.3161C4 18.6938 4.30618 19 4.68387 19C5.874 19 7.04352 19.3106 8.07684 19.9011L8.25 20C9.39679 20.6553 10.6947 21 12.0156 21H13H16H16.5C17.3284 21 18 20.3284 18 19.5C18 19.1158 17.8556 18.7654 17.6181 18.5H18C18.8284 18.5 19.5 17.8284 19.5 17C19.5 16.4601 19.2147 15.9868 18.7867 15.7226C19.478 15.5888 20 14.9804 20 14.25C20 13.4216 19.3284 12.75 18.5 12.75H18.3294C18.7336 12.4813 19 12.0217 19 11.5C19 10.6716 18.3284 10 17.5 10H13.125L13.407 7.74421C13.4688 7.24999 13.4688 6.75001 13.407 6.25579Z\" fill=\"currentColor\"></path></svg>}\n                {isReviewThumbsNeutral(movieId) && mylist && <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"thumbs-up\" onClick={() => deleteReview()}><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.407 6.25579L13.313 5.50407C13.1342 4.07353 11.9181 3 10.4764 3C10.2133 3 10 3.21331 10 3.47644V6.7132C10 6.90062 9.94733 7.08427 9.848 7.2432L7.90742 10.3481C7.64516 10.7677 7.23665 11.0752 6.76086 11.2112L4.72528 11.7928C4.29598 11.9154 4 12.3078 4 12.7543V18.3161C4 18.6938 4.30618 19 4.68387 19C5.874 19 7.04352 19.3106 8.07684 19.9011L8.25 20C9.39679 20.6553 10.6947 21 12.0156 21H13H16H16.5C17.3284 21 18 20.3284 18 19.5C18 19.1158 17.8556 18.7654 17.6181 18.5H18C18.8284 18.5 19.5 17.8284 19.5 17C19.5 16.4601 19.2147 15.9868 18.7867 15.7226C19.478 15.5888 20 14.9804 20 14.25C20 13.4216 19.3284 12.75 18.5 12.75H18.3294C18.7336 12.4813 19 12.0217 19 11.5C19 10.6716 18.3284 10 17.5 10H13.125L13.407 7.74421C13.4688 7.24999 13.4688 6.75001 13.407 6.25579Z\" fill=\"currentColor\"></path></svg>}\n            </div>\n            {/* <div className=\"explanation-review\">\n                <img src={textbubb} className=\"textbubb\"></img>\n            </div> */}\n            <div className={`double-thumbs-up-div ${isReviewThumbsUp(movieId) && \"extra-styling\"}`} id={mylist && \"my-list-double-thumbs-up-div\"}>\n                {!isReviewThumbsUp(movieId) && <img src={dtu} className=\"thumbs-down\" onClick={()=> addtuReview(movieId)}></img>}\n                {isReviewThumbsUp(movieId) && <img src={dtu2} className=\"thumbs-down\" onClick={() => deleteReview()}></img>}\n            </div>\n        </div>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/MovieDetailModal/MovieModal.js",["189","190","191","192","193","194","195"],"import { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport MovieReviewComponent from \"../MovieReview/MovieReview\";\nimport { getMoviesGenresThunk } from \"../../store/genresmovies\";\nimport \"./movieModal.css\";\n\nfunction MovieDetail({ setShowModal, movieId }) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const { profId } = useParams();\n    const movie = useSelector(state => state.movies[movieId])\n    const movieGenres = Object.values(useSelector(state => state.movieGenres))\n    const [movGenres, setMovieGenres] = useState(\"\")\n    // const currMovie = movies[movieId]\n    // console.log(\"MOVIE!!!!\", movie)\n\n    useEffect(() => {\n        dispatch(getMoviesGenresThunk(movieId))\n    }, [movieId, dispatch]);\n\n    const movieGenreWord = () => {\n        let newWords = [];\n        for (let i = 0; i < movieGenres.length - 1; i++) {\n            let curr = movieGenres[i]\n            newWords.push(curr.genre_name, \", \");\n        }\n        let last = movieGenres[movieGenres.length - 1]\n        newWords.push(last?.genre_name)\n        let newGenres = newWords.join(\"\")\n        return newGenres;\n    }\n\n    return (\n        <div className=\"outer-whole-movie-modal\">\n            <div className=\"top-half-movie-modal\"\n                style={{\n                    backgroundSize: \"cover\",\n                    backgroundImage: `url(\"${movie.detail_img}\")`,\n                    backgroundPosition: 'center center'\n                }}\n            >\n                <div className='movie-modal-functions'>\n                    <NavLink to={`/${profId}/watch/${movieId}`} exact='true'>\n                        <button className='play-header-button-modal'>\n                            <i class=\"fa-sharp fa-solid fa-play\"></i>\n                            Play\n                        </button>\n                    </NavLink>\n                    {/* <div className=\"add-to-my-list-modal\">\n                    <svg width=\"13\" height=\"13\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11 2V11H2V13H11V22H13V13H22V11H13V2H11Z\" fill=\"currentColor\"></path></svg>\n                </div> */}\n                    {/* <MovieReviewComponent movieId={movieId}/> */}\n                </div>\n            </div>\n            <div className='fade-bottom-modal'></div>\n            <div className=\"bottom-half-movie-modal\">\n                <h1 className=\"movie-title-modal\">{movie.movie_name}</h1>\n                <div className=\"middle-details-modal\">\n                    <div className=\"left-side-modal-details\">\n                        <div className=\"top-mid-movie-dets\">\n                            <h3 className=\"moviemodal-yr\">{movie.year}</h3>\n                            <div className={`modal-rating-border ${movie.rating == \"R\" || movie.rating == \"G\" || movie.rating == \"PG\" ? \"smaller-rating\" : \"\"}`}>\n                                {movie.rating}\n                            </div>\n                            <h3 className=\"moviemodal-duration\">{movie.duration}</h3>\n                        </div>\n                        <div className=\"bottom-mid-movie-dets\">\n                            <h4>{movie.description}</h4>\n                        </div>\n                    </div>\n                    <div className=\"right-side-modal-details\">\n                        <div className=\"indiv-modal-right-details\">\n                            <span className=\"modal-midd-right-txt\" id=\"label-grey\">Cast: </span>\n                            <span className=\"modal-midd-right-txt\"> {movie.cast}</span>\n                        </div>\n                        <div className=\"indiv-modal-right-details\">\n                            <span className=\"modal-midd-right-txt\" id=\"label-grey\">Genres: </span>\n                            <span className=\"modal-midd-right-txt\">{movieGenreWord()}</span>\n                        </div>\n                        <div className=\"indiv-modal-right-details\">\n                            <span className=\"modal-midd-right-txt\" id=\"label-grey\">This Movie is: </span>\n                            <span className=\"modal-midd-right-txt\"> {movie.movie_is}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"more-about-movie-modal\">\n                    <h3 className=\"movie-more-modal\">About {movie.movie_name}</h3>\n                    <div className=\"indiv-modal-right-details\">\n                        <span className=\"smaller-more-txt\" id=\"label-grey\">Director: </span>\n                        <span className=\"smaller-more-txt\">{movie.director}</span>\n                    </div>\n                    <div className=\"indiv-modal-right-details\">\n                        <span className=\"smaller-more-txt\" id=\"label-grey\">Writer: </span>\n                        <span className=\"smaller-more-txt\">{movie.writer}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default MovieDetail;\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/genresmovies.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/MovieHomePage/MovieHomePage.js",["196"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { getAllMoviesThunk } from '../../store/movies';\nimport { getAllReviewsThunk } from '../../store/reviews';\nimport HomePageCarousel from '../HomePageCarousels/HomePageCarousels';\nimport { Modal } from '../../context/Modal';\nimport MovieDetail from \"../MovieDetailModal/MovieModal\";\n\nexport default function MovieHomePage() {\n    const dispatch = useDispatch();\n    const movies = Object.values(useSelector(state => state.movies))\n    const headerMovie = useSelector(state => state.movies[20])\n    const [showModal, setShowModal] = useState(false);\n    const { profId } = useParams();\n\n    useEffect(() => {\n        dispatch(getAllMoviesThunk())\n        dispatch(getAllReviewsThunk(+profId))\n    }, [dispatch, profId])\n\n    if (!headerMovie || !movies) return null;\n\n    return (\n        <div className='whole-outer-home-page'>\n            <div className='whole-outer-movie-body'\n                style={{\n                    backgroundSize: \"cover\",\n                    backgroundImage: `url(\"${headerMovie.prev_img}\")`,\n                    backgroundPosition: 'center center'\n                }}>\n            </div>\n            <div className='banner-buttons'>\n                <NavLink to={`/${profId}/watch/${headerMovie.id}`} exact='true'>\n                    <button className='play-header-button'>\n                        <i class=\"fa-sharp fa-solid fa-play\"></i>\n                        Play\n                    </button>\n                </NavLink>\n                <div className='more-info-details-button' onClick={() => setShowModal(true)}>\n                    <svg width=\"26\" height=\"26\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3ZM1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12ZM13 10V18H11V10H13ZM12 8.5C12.8284 8.5 13.5 7.82843 13.5 7C13.5 6.17157 12.8284 5.5 12 5.5C11.1716 5.5 10.5 6.17157 10.5 7C10.5 7.82843 11.1716 8.5 12 8.5Z\" fill=\"currentColor\"></path></svg>\n                    <span className='details-button-header'>More Info</span>\n                </div>\n                {showModal && (\n                      <Modal onClose={() => setShowModal(false)}>\n                        <MovieDetail setShowModal={setShowModal} movieId={headerMovie.id}/>\n                      </Modal>\n                )}\n            </div>\n            <div className='fade-bottom'></div>\n            <HomePageCarousel/>\n            <h1 className='more-movies-holder'></h1>\n            {/* <HomePageCarousel/> */}\n        </div>\n    )\n}\n","/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/components/myList/MyList.js",["197","198","199","200","201","202","203"],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/mylist.js",[],"/Users/alexiswest/Desktop/LEXFLIX/lexflix_proj/react-app/src/store/repeatfuncs.js",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"212","line":10,"column":10,"nodeType":"210","messageId":"211","endLine":10,"endColumn":16},{"ruleId":"208","severity":1,"message":"213","line":15,"column":9,"nodeType":"210","messageId":"211","endLine":15,"endColumn":16},{"ruleId":"214","severity":1,"message":"215","line":66,"column":6,"nodeType":"216","endLine":66,"endColumn":30,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":70,"column":28,"nodeType":"220","messageId":"221","endLine":70,"endColumn":30},{"ruleId":"222","severity":1,"message":"223","line":124,"column":13,"nodeType":"224","endLine":124,"endColumn":90},{"ruleId":"218","severity":1,"message":"219","line":132,"column":69,"nodeType":"220","messageId":"221","endLine":132,"endColumn":71},{"ruleId":"218","severity":1,"message":"219","line":134,"column":118,"nodeType":"220","messageId":"221","endLine":134,"endColumn":120},{"ruleId":"222","severity":1,"message":"223","line":135,"column":21,"nodeType":"224","endLine":135,"endColumn":102},{"ruleId":"218","severity":1,"message":"219","line":139,"column":105,"nodeType":"220","messageId":"221","endLine":139,"endColumn":107},{"ruleId":"218","severity":1,"message":"219","line":147,"column":68,"nodeType":"220","messageId":"221","endLine":147,"endColumn":70},{"ruleId":"208","severity":1,"message":"225","line":6,"column":8,"nodeType":"210","messageId":"211","endLine":6,"endColumn":28},{"ruleId":"208","severity":1,"message":"226","line":11,"column":10,"nodeType":"210","messageId":"211","endLine":11,"endColumn":22},{"ruleId":"227","severity":1,"message":"228","line":49,"column":45,"nodeType":"229","messageId":"230","endLine":49,"endColumn":46,"fix":"231"},{"ruleId":"232","severity":1,"message":"233","line":50,"column":9,"nodeType":"234","messageId":"235","endLine":51,"endColumn":26},{"ruleId":"232","severity":1,"message":"236","line":121,"column":9,"nodeType":"234","messageId":"237","endLine":124,"endColumn":29},{"ruleId":"222","severity":1,"message":"223","line":24,"column":25,"nodeType":"224","endLine":24,"endColumn":97},{"ruleId":"208","severity":1,"message":"238","line":3,"column":19,"nodeType":"210","messageId":"211","endLine":3,"endColumn":23},{"ruleId":"222","severity":1,"message":"223","line":24,"column":29,"nodeType":"224","endLine":24,"endColumn":103},{"ruleId":"208","severity":1,"message":"209","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"239","line":15,"column":17,"nodeType":"210","messageId":"211","endLine":15,"endColumn":23},{"ruleId":"208","severity":1,"message":"226","line":17,"column":12,"nodeType":"210","messageId":"211","endLine":17,"endColumn":24},{"ruleId":"222","severity":1,"message":"223","line":62,"column":25,"nodeType":"224","endLine":62,"endColumn":102},{"ruleId":"208","severity":1,"message":"209","line":3,"column":10,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"208","severity":1,"message":"240","line":3,"column":19,"nodeType":"210","messageId":"211","endLine":3,"endColumn":28},{"ruleId":"208","severity":1,"message":"241","line":5,"column":30,"nodeType":"210","messageId":"211","endLine":5,"endColumn":49},{"ruleId":"222","severity":1,"message":"223","line":45,"column":21,"nodeType":"224","endLine":45,"endColumn":266},{"ruleId":"242","severity":1,"message":"243","line":54,"column":13,"nodeType":"224","endLine":54,"endColumn":48},{"ruleId":"218","severity":1,"message":"219","line":106,"column":38,"nodeType":"220","messageId":"221","endLine":106,"endColumn":40},{"ruleId":"218","severity":1,"message":"219","line":106,"column":60,"nodeType":"220","messageId":"221","endLine":106,"endColumn":62},{"ruleId":"218","severity":1,"message":"219","line":106,"column":83,"nodeType":"220","messageId":"221","endLine":106,"endColumn":85},{"ruleId":"208","severity":1,"message":"213","line":12,"column":11,"nodeType":"210","messageId":"211","endLine":12,"endColumn":18},{"ruleId":"214","severity":1,"message":"244","line":33,"column":15,"nodeType":"245","endLine":35,"endColumn":6},{"ruleId":"246","severity":1,"message":"247","line":54,"column":17,"nodeType":"224","messageId":"248","endLine":54,"endColumn":122,"fix":"249"},{"ruleId":"246","severity":1,"message":"247","line":57,"column":17,"nodeType":"224","messageId":"248","endLine":57,"endColumn":103,"fix":"250"},{"ruleId":"208","severity":1,"message":"251","line":1,"column":17,"nodeType":"210","messageId":"211","endLine":1,"endColumn":26},{"ruleId":"208","severity":1,"message":"252","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":27},{"ruleId":"208","severity":1,"message":"253","line":10,"column":8,"nodeType":"210","messageId":"211","endLine":10,"endColumn":16},{"ruleId":"208","severity":1,"message":"254","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":28},{"ruleId":"218","severity":1,"message":"219","line":20,"column":58,"nodeType":"220","messageId":"221","endLine":20,"endColumn":60},{"ruleId":"214","severity":1,"message":"255","line":131,"column":8,"nodeType":"216","endLine":131,"endColumn":14,"suggestions":"256"},{"ruleId":"257","severity":1,"message":"258","line":137,"column":50,"nodeType":"224","endLine":137,"endColumn":124},{"ruleId":"257","severity":1,"message":"258","line":138,"column":49,"nodeType":"224","endLine":138,"endColumn":119},{"ruleId":"257","severity":1,"message":"258","line":150,"column":48,"nodeType":"224","endLine":150,"endColumn":123},{"ruleId":"257","severity":1,"message":"258","line":151,"column":47,"nodeType":"224","endLine":151,"endColumn":118},{"ruleId":"208","severity":1,"message":"259","line":5,"column":8,"nodeType":"210","messageId":"211","endLine":5,"endColumn":28},{"ruleId":"208","severity":1,"message":"213","line":11,"column":11,"nodeType":"210","messageId":"211","endLine":11,"endColumn":18},{"ruleId":"208","severity":1,"message":"260","line":15,"column":12,"nodeType":"210","messageId":"211","endLine":15,"endColumn":21},{"ruleId":"208","severity":1,"message":"261","line":15,"column":23,"nodeType":"210","messageId":"211","endLine":15,"endColumn":37},{"ruleId":"218","severity":1,"message":"219","line":64,"column":81,"nodeType":"220","messageId":"221","endLine":64,"endColumn":83},{"ruleId":"218","severity":1,"message":"219","line":64,"column":104,"nodeType":"220","messageId":"221","endLine":64,"endColumn":106},{"ruleId":"218","severity":1,"message":"219","line":64,"column":127,"nodeType":"220","messageId":"221","endLine":64,"endColumn":129},{"ruleId":"242","severity":1,"message":"243","line":53,"column":13,"nodeType":"224","endLine":53,"endColumn":48},{"ruleId":"208","severity":1,"message":"213","line":15,"column":11,"nodeType":"210","messageId":"211","endLine":15,"endColumn":18},{"ruleId":"208","severity":1,"message":"262","line":24,"column":12,"nodeType":"210","messageId":"211","endLine":24,"endColumn":20},{"ruleId":"214","severity":1,"message":"263","line":36,"column":8,"nodeType":"216","endLine":36,"endColumn":33,"suggestions":"264"},{"ruleId":"222","severity":1,"message":"223","line":85,"column":29,"nodeType":"224","endLine":85,"endColumn":107},{"ruleId":"218","severity":1,"message":"219","line":114,"column":97,"nodeType":"220","messageId":"221","endLine":114,"endColumn":99},{"ruleId":"218","severity":1,"message":"219","line":114,"column":124,"nodeType":"220","messageId":"221","endLine":114,"endColumn":126},{"ruleId":"218","severity":1,"message":"219","line":114,"column":151,"nodeType":"220","messageId":"221","endLine":114,"endColumn":153},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'logout' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionUser'. Either include it or remove the dependency array.","ArrayExpression",["267"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'splashPageBackground' is defined but never used.","'hasSubmitted' is assigned a value but never used.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"268","text":"269"},"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","Expected a 'break' statement before 'case'.","case","'Link' is defined but never used.","'setImg' is assigned a value but never used.","'useParams' is defined but never used.","'getAllProfilesThunk' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"270","text":"271"},{"range":"272","text":"271"},"'useEffect' is defined but never used.","'getAllMoviesThunk' is defined but never used.","'textbubb' is defined but never used.","'getAllReviewsThunk' is defined but never used.","React Hook useEffect has a missing dependency: 'profId'. Either include it or remove the dependency array.",["273"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'MovieReviewComponent' is defined but never used.","'movGenres' is assigned a value but never used.","'setMovieGenres' is assigned a value but never used.","'allmedia' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'media'. Either include it or remove the dependency array.",["274"],"no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},[1305,1306],"",[2090,2090]," rel=\"noreferrer\"",[2284,2284],{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [dispatch, path, profId, sessionUser]",{"range":"281","text":"282"},"Update the dependencies array to be: [path, profId]",{"range":"283","text":"284"},"Update the dependencies array to be: [dispatch, profId, count, media]",{"range":"285","text":"286"},[2122,2146],"[dispatch, path, profId, sessionUser]",[3958,3964],"[path, profId]",[1391,1416],"[dispatch, profId, count, media]"]